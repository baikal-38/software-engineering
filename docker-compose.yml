# Версия docker-compose
version: '4.19.0'
# Список наших сервисов (контейнеров)
services:
    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq
        restart: always
        environment:
            RABBITMQ_DEFAULT_USER: user
            RABBITMQ_DEFAULT_PASS: password
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 3s
            timeout: 5s
            retries: 3
    php_client:
        container_name: php_client
        build: ./images/php_client
        ports:
            - 80:80
        depends_on:
            - rabbitmq
            - mysql_8
        # монтируем директорию с проектами
        volumes:
            - ./www/client:/var/www
        #command: php -S 0.0.0.0:80
        command: bash -c "composer require php-amqplib/php-amqplib && php -S 0.0.0.0:80"
    php_server:
        container_name: php_server
        build: ./images/php_server
        depends_on:
            rabbitmq:
                condition: service_healthy
        #depends_on:
        #    - rabbitmq
        #    - mysql_8
        # монтируем директорию с проектами
        volumes:
            - ./www/server:/var/www
        #command: php server.php
        command: bash -c "composer require php-amqplib/php-amqplib && php server.php"
        restart: on-failure
    mysql_8:
        container_name: mysql_8.0
        image: mysql:8.0
        volumes:
         - ./etc/mysql:/etc/mysql
         - ./logs/mysql:/var/log/mysql
         - ./mysql:/var/lib/mysql
         - ./mysql-files:/var/lib/mysql-files
         - ./cities_dump.sql:/docker-entrypoint-initdb.d/cities_dump.sql
        environment:
            MYSQL_ROOT_PASSWORD: MYSQL_ROOT_PASSWORD
            MYSQL_DATABASE: api_weather_db
            MYSQL_USER: MYSQL_USER
            MYSQL_PASSWORD: MYSQL_PASSWORD